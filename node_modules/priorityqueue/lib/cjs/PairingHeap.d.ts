import { PriorityQueue, PriorityQueueOption } from "./PriorityQueue";
declare type Node<T> = {
    value: T;
    nextSibling: Node<T> | null;
    firstChild: Node<T> | null;
};
export declare class PairingHeap<T> extends PriorityQueue<T> {
    root: Node<T> | null;
    _length: number;
    static from<U>(array: U[], option?: PriorityQueueOption<U>): PairingHeap<U>;
    clear(): void;
    readonly length: number;
    push(val: T): void;
    top(): T;
    pop(): T;
    merge(other: PriorityQueue<T>): void;
    toArray(): T[];
    isEmpty(): boolean;
}
export {};
